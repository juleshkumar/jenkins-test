- name: Attach EFS to server and kube-bench and security score genrator
  hosts: ec2
  become: yes
  gather_facts: no
  tasks:
    - name: Install python3-boto3 package
      raw: |
        apt update
        apt install python3-boto3 -y
      remote_user: ubuntu

    - name: Install unzip package
      raw: apt install -y  unzip
      remote_user: ubuntu

    - name: Download and install awscli package
      raw: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
      remote_user: ubuntu

    - name: Install kubectl package
      raw: snap install kubectl --classic --channel=stable
      remote_user: ubuntu


    - name: Set AWS access key ID
      raw: aws configure set aws_access_key_id "{{ aws_access_key_id }}"
      when: aws_access_key_id is defined
      remote_user: ubuntu

    - name: Set AWS secret access key
      raw: aws configure set aws_secret_access_key "{{ aws_secret_access_key }}"
      when: aws_secret_access_key is defined
      remote_user: ubuntu

    - name: Set AWS region
      raw: aws configure set region "{{ aws_region }}"
      when: aws_region is defined
      remote_user: ubuntu

    - name: Set AWS output format
      raw: aws configure set output "{{ aws_output_format }}"
      when: aws_output_format is defined
      remote_user: ubuntu

    - name: Update kubeconfig for EKS cluster
      raw: aws eks update-kubeconfig --name {{ cluster_name }} --region {{ region }}
      remote_user: ubuntu

    - name: downloading kube-bench deployment file
      raw: aws s3 cp s3://assesment-test-to-delete-yaml/job-eks.yaml /home/ubuntu
      remote_user: ubuntu

    - name: downloading security score generator file
      raw: aws s3 cp s3://assesment-test-to-delete-yaml/scoreGenerator.py /home/ubuntu
      remote_user: ubuntu

    - name: applying kube-bench deployment file
      raw: kubectl apply -f /home/ubuntu/job-eks.yaml
      remote_user: ubuntu

    - name: saving kube-bench pod details
      raw: cd /home/ubuntu && kubectl get pods > kube-pod.txt
      remote_user: ubuntu

    - name: generating kube-bench report
      raw: cd /home/ubuntu && kubectl logs $(awk 'NR==2 {print $1}' kube-pod.txt) > kube-bench-report.txt
      remote_user: ubuntu
    
    - name: generating security-hub report
      raw: cd /home/ubuntu && python3 scoreGenerator.py default > security-hub-report.txt
      remote_user: ubuntu
